<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-02-05T16:19:23-06:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Peter Gee</title><subtitle>Software engineer studying computer science at &lt;a href=&quot;https://unwsp.edu/&quot; target=&quot;_blank&quot;&gt;UNWSP&lt;/a&gt;</subtitle><author><name>Peter Gee</name></author><entry><title type="html">Senior Project Ideas</title><link href="http://localhost:4000/2019/02/05/senior-project-ideas/" rel="alternate" type="text/html" title="Senior Project Ideas" /><published>2019-02-05T00:00:00-06:00</published><updated>2019-02-05T00:00:00-06:00</updated><id>http://localhost:4000/2019/02/05/senior-project-ideas</id><content type="html" xml:base="http://localhost:4000/2019/02/05/senior-project-ideas/">&lt;p&gt;This semester I have two main focuses: my internship and my senior project. Last month I started an internship at &lt;a href=&quot;https://invenshure.com/&quot;&gt;Invenshure&lt;/a&gt; — more on that in a future post. This month I’m starting on my senior project. Although my advisor Dr. Zderad allows great flexibility in choosing a topic, the focus should be on actually creating something. Research is secondary for this particular project.&lt;/p&gt;

&lt;p&gt;Naturally the first step is choosing a topic, and over the past couple months I’ve thought through a few ideas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3D Object Fitting Algorithm (C++)&lt;/li&gt;
  &lt;li&gt;Bible Memory Mobile App (Java)&lt;/li&gt;
  &lt;li&gt;Stock Market Prediction (Python)&lt;/li&gt;
  &lt;li&gt;Beginnings 2 (Lua)&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;3d-object-fitting-algorithm-c&quot;&gt;3D Object Fitting Algorithm (C++)&lt;/h3&gt;

&lt;p&gt;When interviewing at &lt;a href=&quot;https://www.protolabs.com/&quot;&gt;Protolabs&lt;/a&gt; I asked: “Do you have an idea of something I could work on in preparation for the internship?”&lt;/p&gt;

&lt;p&gt;My interviewers gave several topics I could learn about: version control, Visual Studio, large codebases, geometry and linear algebra, and file I/O in C++. One that stuck out was the simple task of fitting a box around a 3D object at a low level. I decided this would work well as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Minimum_viable_product&quot;&gt;minimum viable product&lt;/a&gt;, and more features could be added over time: shapes more complex than a box, changes in orientation to allow for better fitting, and perhaps ultimately an algorithm that assigns a value to how well a given object fits into a given shape.&lt;/p&gt;

&lt;h3 id=&quot;bible-memory-mobile-app-java&quot;&gt;Bible Memory Mobile App (Java)&lt;/h3&gt;

&lt;p&gt;Recently I’ve been using &lt;a href=&quot;https://biblememory.com/&quot;&gt;The Bible Memory App&lt;/a&gt; to learn scripture. There’s a lot to like, but I can’t help but think I could do a better job. It lacks several features I consider crucial as well as some that would just be handy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Option to learn verse numbers&lt;/li&gt;
  &lt;li&gt;Option to memorize from the original Greek and Hebrew&lt;/li&gt;
  &lt;li&gt;Accurate progression: the app says a verse is “memorized” the first time you work on it&lt;/li&gt;
  &lt;li&gt;More than one way to memorize a verse&lt;/li&gt;
  &lt;li&gt;Dark mode&lt;/li&gt;
  &lt;li&gt;Stricter requirements: type first 2 letters, require the grammar, etc.&lt;/li&gt;
  &lt;li&gt;In-app resources about scripture memory (articles, quotes, etc.)&lt;/li&gt;
  &lt;li&gt;Better monetization (charging for versions of the Bible? &lt;em&gt;Really?&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sansforgetica.rmit/&quot;&gt;Sans Forgetica&lt;/a&gt; (because why not)&lt;/li&gt;
  &lt;li&gt;Android notifications that &lt;em&gt;actually work&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Who knows, maybe there’s already an app out there that has these features. But the fact that one of the most popular options falls short of the mark tells me there’s an opportunity here.&lt;/p&gt;

&lt;h3 id=&quot;stock-market-prediction-python&quot;&gt;Stock Market Prediction (Python)&lt;/h3&gt;

&lt;p&gt;Perhaps the craziest idea I’ve been considering is stock market prediction. Certainly many have tried, and I too would likely fail, but failure can be glorious if you learn something in the process. Data science is an area I’m interested in but haven’t yet dived into. Even my initial research shows &lt;a href=&quot;https://hackernoon.com/i-spent-20-minutes-trying-to-predict-the-stock-market-with-ai-these-are-my-results-59d48c7a388a&quot;&gt;someone achieving 54% accuracy in 20 minutes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ve already written a &lt;a href=&quot;/projects/currency/&quot;&gt;profitable trading algorithm&lt;/a&gt;, but competition would be several orders of magnitude greater on the actual stock market. Of course I would start with a simulator to make trades if I ever got to that point.&lt;/p&gt;

&lt;p&gt;The stock market appeals to me because gathering data and judging success are both straight forward. This means I could focus on the algorithm itself.&lt;/p&gt;

&lt;h3 id=&quot;beginnings-2-lua&quot;&gt;Beginnings 2 (Lua)&lt;/h3&gt;

&lt;p&gt;While every idea here appeals to me, the one I am actually most excited about is finishing &lt;a href=&quot;/projects/beginnings/&quot;&gt;Beginnings 2&lt;/a&gt;. Although the game is nearly finished, even the remaining work is larger than a typical senior project. With that in mind, I asked my advisor whether this would be an option and he encouraged it. I’ve now decided that this will be my senior project, and I believe it’s the push I need to finally finish the game.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">This semester I have two main focuses: my internship and my senior project. Last month I started an internship at Invenshure — more on that in a future post. This month I’m starting on my senior project. Although my advisor Dr. Zderad allows great flexibility in choosing a topic, the focus should be on actually creating something. Research is secondary for this particular project. Naturally the first step is choosing a topic, and over the past couple months I’ve thought through a few ideas: 3D Object Fitting Algorithm (C++) Bible Memory Mobile App (Java) Stock Market Prediction (Python) Beginnings 2 (Lua)</summary></entry><entry><title type="html">Random Maps</title><link href="http://localhost:4000/2019/01/29/random-maps/" rel="alternate" type="text/html" title="Random Maps" /><published>2019-01-29T00:00:00-06:00</published><updated>2019-01-29T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/29/random-maps</id><content type="html" xml:base="http://localhost:4000/2019/01/29/random-maps/">&lt;p&gt;Today we’ll be looking at random map generation in Beginnings 2. Every server will be unique. The generation algorithm consists of two parts: island selection and island placement. We also have a GUI minimap.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;island-selection&quot;&gt;Island Selection&lt;/h3&gt;

&lt;p&gt;First, a number of islands are selected from a pool. While Beginnings currently has 14 islands, Beginnings 2 will have an island pool around 3 times that size. From this pool the algorithm randomly selects islands to place in a server. The algorithm makes sure all resource types are included in at least one spot on the map.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/random-maps-generations.png&quot; /&gt;&lt;figcaption&gt;Some random maps&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h3 id=&quot;island-placement&quot;&gt;Island Placement&lt;/h3&gt;

&lt;p&gt;Second, the chosen islands are scattered across the map. In general colder islands are placed in the north, and warmer islands are placed in the south. Some islands can be placed anywhere.&lt;/p&gt;

&lt;p&gt;You may have noticed that the continent and the volcano are always present. It’s true that a single continent will appear on every server, but other continents are in development (think snow, desert, and so on). As for the volcano, no server will escape its looming presence.&lt;/p&gt;

&lt;h3 id=&quot;minimap&quot;&gt;Minimap&lt;/h3&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/random-maps-minimap.jpg&quot; /&gt;&lt;figcaption&gt;A GUI showing the original map&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;This GUI minimap was developed by our faithful admin who goes by the username CounterCrysis. At the moment it takes a “screenshot” of the map when a server launches, though it would be interesting to pursue a minimap that updates in real time.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">Today we’ll be looking at random map generation in Beginnings 2. Every server will be unique. The generation algorithm consists of two parts: island selection and island placement. We also have a GUI minimap.</summary></entry><entry><title type="html">The History of Beginnings</title><link href="http://localhost:4000/2019/01/22/history-beginnings/" rel="alternate" type="text/html" title="The History of Beginnings" /><published>2019-01-22T00:00:00-06:00</published><updated>2019-01-22T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/22/history-beginnings</id><content type="html" xml:base="http://localhost:4000/2019/01/22/history-beginnings/">&lt;p&gt;This blog seems a natural place to write about my projects. The largest of these is Beginnings, a game published on &lt;a href=&quot;https://www.roblox.com/&quot;&gt;Roblox&lt;/a&gt;. In this post I’d like to go over the game’s history. If you’re more interested in the game’s current state, take a look at its &lt;a href=&quot;/projects/beginnings/&quot;&gt;project page&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;In June 2009, David “Davidii” Nurkkala—an old friend of mine—created a game called Survival 101. I distinctly remember playing one of the earliest versions. There was a single island, and the only resources were trees and berry bushes. One day the player count spiked to over 600, securing the #1 spot on the Roblox games page. The Survival Series and its loyal community were born.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/history-beginnings-101.jpg&quot; /&gt;&lt;figcaption&gt;Survival 101&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;David went on to create Survival 202 and Survival 303 that same year. 303 became the fan favorite with plays surpassing even David’s sequels: 404 in 2010, Finale in 2011, Into the Frost in 2012, and Dominion in 2013.&lt;/p&gt;

&lt;p&gt;Meanwhile many of us continued to play 303. When David shifted his focus elsewhere, he gave me permission to update the game in his stead. Several others joined the 303 development team later, and &lt;a href=&quot;https://www.roblox.com/games/480485987/Survival-303&quot;&gt;the game receives updates to this day&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/history-beginnings-303.png&quot; /&gt;&lt;figcaption&gt;Survival 303&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;In November 2013 I decided to make a sequel to 303. I had experience with the genre and a desire to grow the Survival Series. Thus I began work on Survival: Beginnings. My brother Nathan joined not long after. By chance David also decided to make a sequel to 303 around the same time, Survival 323.&lt;/p&gt;

&lt;p&gt;Beginnings was made from the ground up in about 40 days. The day after its release it hit the #1 spot on the games page at around 3,700 players. Since its release it has been played over 2 million times. Unfortunately, because the code was written shortly before &lt;a href=&quot;https://blog.roblox.com/2014/05/game-creation-gets-bigger-faster-and-more-lucrative-in-2014/&quot;&gt;FilteringEnabled became an option&lt;/a&gt;, rampant exploiters ruined hundreds of servers. This made updates feel pointless. Why make updates if they would be nullified by hordes of &lt;a href=&quot;https://en.wikipedia.org/wiki/Script_kiddie&quot;&gt;script kiddies&lt;/a&gt;? This led us to start work on Beginnings 2.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/history-beginnings-series.png&quot; /&gt;&lt;figcaption&gt;The Survival Series&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Over the past few years we’ve been working on Beginnings 2 here and there. Of course we would have liked to release the game long ago, but several factors have caused delays. We have tremendous aspirations for the game, and we don’t want to release something half baked. It’s currently in Beta and benefits from testers in our community of fans. We will release the public version when we believe it’s ready.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">This blog seems a natural place to write about my projects. The largest of these is Beginnings, a game published on Roblox. In this post I’d like to go over the game’s history. If you’re more interested in the game’s current state, take a look at its project page.</summary></entry><entry><title type="html">My Undergraduate Courses</title><link href="http://localhost:4000/2019/01/15/unw-courses/" rel="alternate" type="text/html" title="My Undergraduate Courses" /><published>2019-01-15T00:00:00-06:00</published><updated>2019-01-15T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/15/unw-courses</id><content type="html" xml:base="http://localhost:4000/2019/01/15/unw-courses/">&lt;p&gt;Below I’ve listed all the courses within my computer science major that I’ve taken at the &lt;a href=&quot;https://unwsp.edu/&quot;&gt;University of Northwestern – St. Paul&lt;/a&gt;. Only the courses that are strictly within my major are shown; I’ve also taken a number of general courses such as Physics and Economics. This post will serve as a reference for myself and for anyone interested in my coursework. Nearly everything below is taken straight from the syllabi.&lt;/p&gt;

&lt;!--more--&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Number&lt;/th&gt;
      &lt;th&gt;Title&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;COS1075&lt;/td&gt;
      &lt;td&gt;Principles of Computer Science&lt;/td&gt;
      &lt;td&gt;An introduction to computer hardware, development of computer programs for problem solving, basics of programming, fundamentals of computer security, and the use of computer networks.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS2115&lt;/td&gt;
      &lt;td&gt;Computer Software Development&lt;/td&gt;
      &lt;td&gt;An introduction to developing front-end applications for databases and developing applications in a business environment. See: &lt;a href=&quot;/projects/freegan/&quot;&gt;Games Database App&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS2201&lt;/td&gt;
      &lt;td&gt;C Programming Language&lt;/td&gt;
      &lt;td&gt;Fundamental principles of programming in the “C” programming language: programming techniques, language, and vocabulary.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS2202&lt;/td&gt;
      &lt;td&gt;C++ Programming Language&lt;/td&gt;
      &lt;td&gt;Fundamental principles of programming in the C++ programming language: object-oriented programming, variables, data types, arrays, pointers, functions, and classes.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS3267&lt;/td&gt;
      &lt;td&gt;Operating Systems Concepts&lt;/td&gt;
      &lt;td&gt;An overview of the principles upon which all operating systems are built. The concepts of file, processor, input/output, and memory management are explored. In addition, higher-level concepts such as security, multiple processors, multitasking, concurrency, and transaction processing are covered. See: &lt;a href=&quot;/projects/hadoop/&quot;&gt;Hadoop Clusters&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS3369&lt;/td&gt;
      &lt;td&gt;Computer Security Fundamentals&lt;/td&gt;
      &lt;td&gt;An introduction to the concepts of security. These concepts are applied to areas such as programming, databases, networks, systems, and applications. The course covers general concepts and specific instances of security related threats. See: &lt;a href=&quot;/projects/quantum/&quot;&gt;Quantum Cryptography Presentation&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS3381&lt;/td&gt;
      &lt;td&gt;Data Communications&lt;/td&gt;
      &lt;td&gt;A comprehensive overview of the broad topic of data communications including IPv4 and IPv6. The ISO OSI model of data communications is used as a framework.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS3835&lt;/td&gt;
      &lt;td&gt;Career Competencies Seminar&lt;/td&gt;
      &lt;td&gt;Orientation and preparation for an academic internship. To be completed the semester immediately prior to enrolling in the internship course offered by the academic department.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS4845&lt;/td&gt;
      &lt;td&gt;Senior Project&lt;/td&gt;
      &lt;td&gt;A capstone experience for computer science majors in their senior year. Each student works on an in-depth, guided project, culminating in both a written report and an oral presentation.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIS3265&lt;/td&gt;
      &lt;td&gt;Systems Analysis and Design&lt;/td&gt;
      &lt;td&gt;A course that covers the topic of Systems Analysis and Design within the context of the System Development Life Cycle (SDLC). The Unified Modeling Language (UML) is introduced and used to generate artifacts of the life cycle. The requirements, analysis, and design phases of the life cycle are explored in detail. See: &lt;a href=&quot;/projects/wsi/&quot;&gt;WSI Sports Production Flow&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIS3361&lt;/td&gt;
      &lt;td&gt;Database Management&lt;/td&gt;
      &lt;td&gt;A course that presents the fundamental concepts of databases and the general architectures used in modern databases. The ideas of database design are presented along with topics such as database access, indexing, reports, and queries. The student is exposed to one a current database management systems. An actual database application using the programmability of the DBMS is created as part of this course.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIS4465&lt;/td&gt;
      &lt;td&gt;Computer Firewalls&lt;/td&gt;
      &lt;td&gt;A course that presents the basics of VPN security and network firewalls. Basic installation techniques are covered along with how to make an intelligent choice of firewall technology. Basic firewall troubleshooting is also presented. This course aligns with the CheckPoint CCSA Certification outline.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIS4466&lt;/td&gt;
      &lt;td&gt;Computer Forensics&lt;/td&gt;
      &lt;td&gt;An introductory course that provides the student with methods for conducting a computer forensics investigation including procedures, tools, ethics, and analysis. This course maps to the objectives of the International Association of Computer Investigative Specialists (IACIS) certification.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2005&lt;/td&gt;
      &lt;td&gt;Problem Solving&lt;/td&gt;
      &lt;td&gt;An introduction to mathematics and mathematics problem solving, including problem selection, problem solving strategies, the problem solving process, and contemporary applications of mathematics.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2055&lt;/td&gt;
      &lt;td&gt;Statistics&lt;/td&gt;
      &lt;td&gt;An introductory statistics course consisting of two major areas: descriptive and inferential statistics. Topics covered include methods for describing data, binomial and normal probability distributions, tests of hypothesis, analysis of variance, and linear regression.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2121&lt;/td&gt;
      &lt;td&gt;Calculus and Analytic Geometry I&lt;/td&gt;
      &lt;td&gt;The study of functions, limits, derivatives, and applications of derivatives such as maxima/minima and related rates.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2122&lt;/td&gt;
      &lt;td&gt;Calculus and Analytic Geometry II&lt;/td&gt;
      &lt;td&gt;The continued study of calculus to include antiderivatives, integration techniques, applications of definite integrals such as volumes of revolution, polar coordinates, series, sequences, and power series.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2215&lt;/td&gt;
      &lt;td&gt;Linear Algebra&lt;/td&gt;
      &lt;td&gt;A course that provides an understanding of the concepts of linear system, linear transformation, linear independence, basis, vector space, row/column space, determinant, dimension, rank, eigenvector, and inner product space. It also provides an ability to solve linear equations, perform matrix operations, calculate determinants, perform vector operations, determine eigenvectors/eigenvalues, and diagonalize a matrix.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2221&lt;/td&gt;
      &lt;td&gt;Universal Theories of Mathematics I&lt;/td&gt;
      &lt;td&gt;An introductory treatment on the development of the logical structure of mathematics including propositions, predicates, truth tables, and the rules of logic. A formal development of set theory including set operations, permutations, combinations, Pascal’s triangle, and partitions.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2222&lt;/td&gt;
      &lt;td&gt;Universal Theories of Mathematics II&lt;/td&gt;
      &lt;td&gt;An in-depth analysis of axiomatic systems and proof techniques including: direct proof, proof by contradiction, existence proofs, and mathematical induction. A formal development of relations including equivalence classes, partial orders, and functions. A study of the concepts of infinity and countability.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT3225&lt;/td&gt;
      &lt;td&gt;Discrete Mathematics&lt;/td&gt;
      &lt;td&gt;An overview of the mathematics of discrete processes. Topics include graphs, trees, linear programming, recursion, and algorithm analysis.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT3226&lt;/td&gt;
      &lt;td&gt;Digital Mathematics&lt;/td&gt;
      &lt;td&gt;An overview of the mathematics of the discrete processes of computers. Topics include the fundamentals of logic, Boolean algebra, number systems, and logical circuits.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT4337&lt;/td&gt;
      &lt;td&gt;Mathematical Models and Applications&lt;/td&gt;
      &lt;td&gt;A survey course in choosing mathematical models to help explain and predict real-world phenomena. Particular problems in the social, life, physical, and management sciences are investigated. See: &lt;a href=&quot;/projects/autumn/&quot;&gt;Autumn Simulation&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">Below I’ve listed all the courses within my computer science major that I’ve taken at the University of Northwestern – St. Paul. Only the courses that are strictly within my major are shown; I’ve also taken a number of general courses such as Physics and Economics. This post will serve as a reference for myself and for anyone interested in my coursework. Nearly everything below is taken straight from the syllabi.</summary></entry><entry><title type="html">5 Reasons to Choose Jekyll</title><link href="http://localhost:4000/2019/01/08/reasons-jekyll/" rel="alternate" type="text/html" title="5 Reasons to Choose Jekyll" /><published>2019-01-08T00:00:00-06:00</published><updated>2019-01-08T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/08/reasons-jekyll</id><content type="html" xml:base="http://localhost:4000/2019/01/08/reasons-jekyll/">&lt;p&gt;The web has no shortage of options when it comes to creating a website. I’m here to make the argument that you should host your site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; using &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. This choice especially makes sense for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Developers&lt;/strong&gt; – Jekyll lets you write your own code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bloggers&lt;/strong&gt; – Jekyll offers excellent blog support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that’s why I’m using Jekyll for this developer blog. But I also believe it’s a good option for many other types of websites, and here are 5 reasons why.&lt;!--more--&gt; A Jekyll site hosted on GitHub Pages is:&lt;/p&gt;

&lt;h3 id=&quot;1-free&quot;&gt;1. Free&lt;/h3&gt;

&lt;p&gt;GitHub Pages allows you to host an unlimited number of project sites at no cost. It works great with Jekyll, too. Although Jekyll can be hosted elsewhere and GitHub Pages supports all kinds of static site generators, I’ve found &lt;a href=&quot;https://jekyllrb.com/docs/github-pages/&quot;&gt;recommendations from Jekyll to use GitHub Pages&lt;/a&gt; and &lt;a href=&quot;https://help.github.com/articles/about-github-pages-and-jekyll/&quot;&gt;recommendations from GitHub Pages to use Jekyll&lt;/a&gt;. They belong together.&lt;/p&gt;

&lt;h3 id=&quot;2-static&quot;&gt;2. Static&lt;/h3&gt;

&lt;p&gt;Everything on your site is static. This means your site is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt; – You don’t have to wait for a database or anything else on the backend because there is no backend.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt; – There aren’t a lot of plugins or dependencies to worry about.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt; – Jekyll’s small scope means there’s no server-side software to maintain.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-flexible&quot;&gt;3. Flexible&lt;/h3&gt;

&lt;p&gt;Jekyll is great for software developers. It gives you total control and doesn’t force you to do anything you don’t want to do. However, even the less technically inclined are free to set up a website. There are all kinds of &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;free themes&lt;/a&gt; to choose from if you don’t want to design your own. Someone even made a &lt;a href=&quot;https://github.com/barryclark/jekyll-now&quot;&gt;guide&lt;/a&gt; to setting up your site without using the command line.&lt;/p&gt;

&lt;h3 id=&quot;4-open-source&quot;&gt;4. Open source&lt;/h3&gt;

&lt;p&gt;All the code can be &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;found on GitHub&lt;/a&gt;. This is also true of many themes, and, of course, the code for your own site if you so choose.&lt;/p&gt;

&lt;h3 id=&quot;5-owned-by-you&quot;&gt;5. Owned by you&lt;/h3&gt;

&lt;p&gt;You own your content. The devs behind Jekyll could give up on the project and you’d still have online and local copies of your entire site. This isn’t true of many other platforms. They could go out of business or shut down the part of the business you rely on. You’d always be at risk of losing your content. Not so of Jekyll!&lt;/p&gt;

&lt;p&gt;Free, static, flexible, open source, and owned by you. That’s what you get when you choose Jekyll on GitHub Pages. There are no doubt many other worthy options to consider, and you should look into these, but for me personally I found exactly what I wanted right here.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">The web has no shortage of options when it comes to creating a website. I’m here to make the argument that you should host your site on GitHub Pages using Jekyll. This choice especially makes sense for: Developers – Jekyll lets you write your own code. Bloggers – Jekyll offers excellent blog support. And that’s why I’m using Jekyll for this developer blog. But I also believe it’s a good option for many other types of websites, and here are 5 reasons why.</summary></entry><entry><title type="html">Hello World</title><link href="http://localhost:4000/2019/01/01/hello-world/" rel="alternate" type="text/html" title="Hello World" /><published>2019-01-01T00:00:00-06:00</published><updated>2019-01-01T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/01/hello-world</id><content type="html" xml:base="http://localhost:4000/2019/01/01/hello-world/">&lt;p&gt;Hi there! I’m Peter.&lt;/p&gt;

&lt;p&gt;I wrote my first line of code when I was eight, and I’ve loved it ever since. Since then I’ve created games, desktop apps, databases, macros, websites, web crawlers, trading algorithms–whatever piques my curiosity, really. I’m fascinated by interesting problems, and I enjoy writing code to solve them. I’m currently majoring in computer science at the &lt;a href=&quot;https://unwsp.edu/&quot;&gt;University of Northwestern – St. Paul&lt;/a&gt;, and I’ll graduate later this year.&lt;/p&gt;

&lt;p&gt;In this first post I’d like to get a few things out of the way.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;this-is-a-developer-blog&quot;&gt;This is a developer blog.&lt;/h3&gt;

&lt;p&gt;The focus is on technology, not on me. This is meant as a space for me to share my thoughts about relevant topics in computer science that interest me and that I believe may interest others. I will also write about projects I’m working on. This is intentionally broad because I don’t want to restrict myself to specific topics so early on.&lt;/p&gt;

&lt;h3 id=&quot;i-have-several-reasons-for-writing-here&quot;&gt;I have several reasons for writing here.&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;To learn new things constantly.&lt;/li&gt;
  &lt;li&gt;To master what I’m learning by teaching it to others.&lt;/li&gt;
  &lt;li&gt;To keep a historical record of my thoughts and work.&lt;/li&gt;
  &lt;li&gt;To benefit readers by adding something unique to the conversation.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I have no intention of reaching a wide audience. Even if nobody reads what I write, my first three goals will be fulfilled. That is enough for me.&lt;/p&gt;

&lt;h3 id=&quot;posts-will-be-published-every-tuesday-at-minimum&quot;&gt;Posts will be published every Tuesday at minimum.&lt;/h3&gt;

&lt;p&gt;This schedule will help to keep myself accountable. It may change to become more or less frequent as time goes on.&lt;/p&gt;

&lt;p&gt;Next week I’ll move beyond introduction and start discussing topics in the industry.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">Hi there! I’m Peter. I wrote my first line of code when I was eight, and I’ve loved it ever since. Since then I’ve created games, desktop apps, databases, macros, websites, web crawlers, trading algorithms–whatever piques my curiosity, really. I’m fascinated by interesting problems, and I enjoy writing code to solve them. I’m currently majoring in computer science at the University of Northwestern – St. Paul, and I’ll graduate later this year. In this first post I’d like to get a few things out of the way.</summary></entry></feed>