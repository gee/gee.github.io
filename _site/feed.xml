<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-03-14T20:08:20-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Peter Gee</title><subtitle>Software engineer studying computer science at &lt;a href=&quot;https://unwsp.edu/&quot; target=&quot;_blank&quot;&gt;UNWSP&lt;/a&gt;</subtitle><author><name>Peter Gee</name></author><entry><title type="html">Interview Impressions: RevTrak</title><link href="http://localhost:4000/2019/03/14/interview-impressions-revtrak/" rel="alternate" type="text/html" title="Interview Impressions: RevTrak" /><published>2019-03-14T00:00:00-05:00</published><updated>2019-03-14T00:00:00-05:00</updated><id>http://localhost:4000/2019/03/14/interview-impressions-revtrak</id><content type="html" xml:base="http://localhost:4000/2019/03/14/interview-impressions-revtrak/">&lt;p&gt;&lt;img src=&quot;/public/images/interview-impressions-revtrak-logo.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Over the course of my summer 2018 internship search I applied to around 10 companies. The only company I ended up interviewing with was the only one that reached out to me first: &lt;a href=&quot;https://www.revtrak.com/&quot;&gt;RevTrak&lt;/a&gt;, a K-12 payment processing company. They most likely contacted me due to my connections with the human resources assistant and other employees through church.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;My roommate had worked there the previous summer and gave high praise of the work environment. I thus had a good first impression of the company, although this was diminished somewhat when it took them a couple months to respond to my application. Finally a senior technical lead contacted me for a phone interview that lasted 20 minutes. Looking back, it went surprisngly well for my first phone interview ever, although the first question did catch me off guard (which was most likely the intention).&lt;/p&gt;

&lt;p&gt;Questions asked included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Where do you see yourself in 20 years?&lt;/li&gt;
  &lt;li&gt;Where do you see yourself in 5 years?&lt;/li&gt;
  &lt;li&gt;Where do you see yourself in 1 year?&lt;/li&gt;
  &lt;li&gt;What kind of tasks are you best at?&lt;/li&gt;
  &lt;li&gt;What kind of tasks do you most enjoy?&lt;/li&gt;
  &lt;li&gt;What kind of tasks do you least enjoy?&lt;/li&gt;
  &lt;li&gt;Could you give me a 5 minute rundown of &lt;a href=&quot;/projects/beginnings/&quot;&gt;Beginnings&lt;/a&gt;?&lt;/li&gt;
  &lt;li&gt;What are some things you’ve heard about RevTrak?&lt;/li&gt;
  &lt;li&gt;What’s your decision making timeline?&lt;/li&gt;
  &lt;li&gt;What’s your most important factor in making a decision?&lt;/li&gt;
  &lt;li&gt;On a scale of 1-10, how likely would you be to return to RevTrak as an employee later?&lt;/li&gt;
  &lt;li&gt;Do you think this job is a good fit for you?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The interviewer told me they do 2-week &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrum_(software_development)&quot;&gt;Scrum&lt;/a&gt; sprints with a company-wide stand up at 9 AM each day followed by team stand ups afterwards. Some tools they use are &lt;a href=&quot;https://www.atlassian.com/software/jira&quot;&gt;Jira&lt;/a&gt;, &lt;a href=&quot;https://visualstudio.microsoft.com/tfs/&quot;&gt;Microsoft TFS&lt;/a&gt;, and &lt;a href=&quot;https://products.office.com/en-us/microsoft-teams/group-chat-software&quot;&gt;Microsoft Teams&lt;/a&gt;. They would contact me for a 1.5-3 hour interview to meet the team and have a coding test.&lt;/p&gt;

&lt;p&gt;The onsite interview had 3 parts. The first involved 2 interviewers, one of whom was the phone interviewer. They generally asked similar questions to the phone interview, although one that stood out was, “Name 3 things you are not.” They also asked me to write pseudocode on a whiteboard with my solution to a problem that I had seen in &lt;a href=&quot;http://www.crackingthecodinginterview.com/&quot;&gt;Cracking the Coding Interview&lt;/a&gt; (interview question 1.2 in the 6th edition): “Given two strings, write a method to decide if one is a permutation of the other.” They were expecting &lt;a href=&quot;https://github.com/careercup/CtCI-6th-Edition/blob/master/Java/Ch%2001.%20Arrays%20and%20Strings/Q1_02_Check_Permutation/QuestionA.java&quot;&gt;solution A&lt;/a&gt;, but I gave them &lt;a href=&quot;https://github.com/careercup/CtCI-6th-Edition/blob/master/Java/Ch%2001.%20Arrays%20and%20Strings/Q1_02_Check_Permutation/QuestionB.java&quot;&gt;solution B&lt;/a&gt;. For context, solution A was more straightforward and debatably cleaner, while solution B had improved time complexity and thus better performance. Growing up as a game developer, my instinct is typically to make performance a priority. Since this interview, I’ve been learning that most developers focus much more on code cleanliness than code efficiency. I don’t blame them; performance just isn’t as important in business as it is in gaming.&lt;/p&gt;

&lt;p&gt;The second interview had me talking casually with 3 developers who I’d be working with. I got the feeling they were testing how well I’d fit in with their team’s culture. They clearly had less of an agenda compared to the other interviewers. They were just developers. Interviewing wasn’t a normal part of their jobs. The focus also turned to my resume. We talked about past projects, teams, classes, etc.&lt;/p&gt;

&lt;p&gt;Up to this point I had been feeling good. It was the third and final interview that made me sweat. A stoic senior developer had me writing code on paper for an hour or so on a strange coding test (the earlier test was a “warm up”) that required in-depth knowledge of Java that I wasn’t prepared for. I had made it clear to the earlier interviewers that I was rusty with my Java, and they assured me I’d be fine. That wasn’t the case.&lt;/p&gt;

&lt;p&gt;I didn’t end up getting the job, but what I learned from RevTrak set me up well for my interviews the following year.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">Over the course of my summer 2018 internship search I applied to around 10 companies. The only company I ended up interviewing with was the only one that reached out to me first: RevTrak, a K-12 payment processing company. They most likely contacted me due to my connections with the human resources assistant and other employees through church.</summary></entry><entry><title type="html">Interview Impressions: Intro</title><link href="http://localhost:4000/2019/03/12/interview-impressions-intro/" rel="alternate" type="text/html" title="Interview Impressions: Intro" /><published>2019-03-12T00:00:00-05:00</published><updated>2019-03-12T00:00:00-05:00</updated><id>http://localhost:4000/2019/03/12/interview-impressions-intro</id><content type="html" xml:base="http://localhost:4000/2019/03/12/interview-impressions-intro/">&lt;p&gt;I haven’t uploaded anything lately, so this week I’ll be writing 3 posts.&lt;/p&gt;

&lt;p&gt;This particular post marks the start of a series I’m calling &lt;em&gt;Interview Impressions&lt;/em&gt;. This will be a set of around 10 posts in which I’ll summarize my interactions with and impressions of companies where I interviewed. With the exception of RevTrak, where I interviewed over a year ago, the interviews took place between late November 2018 and early January 2019.&lt;/p&gt;

&lt;p&gt;So why write this series?&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;My search for a summer 2018 internship was halfhearted. There were several other things I wanted to do with my summer, and although I had some job experience, I really didn’t have any job &lt;em&gt;search&lt;/em&gt; experience. I look back on that period thankful for all the lessons I learned that allowed me to be much more successful the second time around.&lt;/p&gt;

&lt;p&gt;Initially the most daunting part of the job search process was interviewing. I didn’t know what to expect. If I would have had access to a series of posts that explained how various companies conducted their software developer interviews, I would have felt much more prepared. It would have given me concrete context instead of being left with vague preconceptions.&lt;/p&gt;

&lt;p&gt;Thus, I hope this series helps anyone who finds themselves in a similar place of not knowing what to expect. Of course, it will also serve as a record of history that I’ll be able to look back on years from now.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">I haven’t uploaded anything lately, so this week I’ll be writing 3 posts. This particular post marks the start of a series I’m calling Interview Impressions. This will be a set of around 10 posts in which I’ll summarize my interactions with and impressions of companies where I interviewed. With the exception of RevTrak, where I interviewed over a year ago, the interviews took place between late November 2018 and early January 2019. So why write this series?</summary></entry><entry><title type="html">Basic Microtransaction Categories</title><link href="http://localhost:4000/2019/02/19/microtransaction-categories/" rel="alternate" type="text/html" title="Basic Microtransaction Categories" /><published>2019-02-19T00:00:00-06:00</published><updated>2019-02-19T00:00:00-06:00</updated><id>http://localhost:4000/2019/02/19/microtransaction-categories</id><content type="html" xml:base="http://localhost:4000/2019/02/19/microtransaction-categories/">&lt;p&gt;Monetization is one of the most controversial topics in gaming today. Should a game have a single upfront cost? Should it be free-to-play? What about &lt;a href=&quot;https://en.wikipedia.org/wiki/Freemium&quot;&gt;freemium&lt;/a&gt;? Are loot boxes ethical? What should we sell, and what should be off limits? Should a game’s monetization scheme depend on its genre?&lt;/p&gt;

&lt;p&gt;These questions are particularly relevant for competitive online games with plenty of interaction between players. Since &lt;a href=&quot;/projects/beginnings/&quot;&gt;Beginnings&lt;/a&gt; falls under that description this is a topic I’ve put a lot of thought into. In our case we originally had no intentions of selling anything because we had no idea the game would become popular. Since then we’ve adopted a freemium model. We offer the vast majority of the game for free, but certain additional features or customizations are for sale. It seems to me that there are 4 basic categories that these kinds of microtransactions can be split into: power, mechanic, convenience, and cosmetic.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;power&quot;&gt;Power&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Example: Buy this and double your max health&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Power transactions are selling things like better stats, better equipment, and so on. Power microtransactions usually manifest themselves as the “pay to win” model that most gamers rightfully despise. However, I believe there are rare cases where this kind of monetization is acceptable. &lt;a href=&quot;https://en.wikipedia.org/wiki/Collectible_card_game&quot;&gt;Collectible card games&lt;/a&gt; (CCG) are one such exception. CCGs are a breed of their own. Because much of a CCG’s gameplay actually takes place when building a deck rather than playing a deck, interesting questions come up such as, “should I buy 10 decent cards or 1 rare card?” or “how can I build the best deck for under $100?” Selling cards of varying power thus enhances the game.&lt;/p&gt;

&lt;p&gt;I want to reiterate that selling power is almost always a terrible idea. Doing so makes your players feel cheated, and it makes you look greedy. We will never sell power microtransactions in Beginnings.&lt;/p&gt;

&lt;h3 id=&quot;mechanic&quot;&gt;Mechanic&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Example: Buy this and craft hot air balloons&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Mechanic microtransactions enable players to do something mechanically that they wouldn’t have been able to otherwise. They’re safer than power microtransactions, but they still need to be handled with care. These make sense for some but certainly not all games.&lt;/p&gt;

&lt;p&gt;In Beginnings, we plan to sell unique recipes such as a hot air balloon and a hang glider. While these do give players a boost, we aren’t boosting something black and white. We’re selling something more subjective than a numeric power boost. We’re just letting them do something cool. Hovering in a balloon means you’re vulnerable to fire arrows, and you’ll starve or run out of fuel if you stay in the air too long. We’re putting these limitations in place to prevent a mechanic microtransaction from becoming a power microtransaction. Admittedly the line between the two is sometimes blurry, and this is something I’m still figuring out for myself.&lt;/p&gt;

&lt;h3 id=&quot;convenience&quot;&gt;Convenience&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Example: Buy this and level up faster&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Convenience microtransactions are most often the sale of time. That is, a game might allow players to level up faster once they pay up. Maybe there’s a part of the game that can be unlocked after completing a certain number of levels, but buying a convenience microtransaction allows them to skip those levels and get to the good stuff right away. &lt;a href=&quot;https://supercell.com/en/games/clashofclans/&quot;&gt;Clash of Clans&lt;/a&gt; is one of the clearest examples of this type of monetization. The game lets you speed up processes that would otherwise take hours. You can wait for your resources to grow, or you can just pay and get resources instantly. It’s money in exchange for time. There are also other kinds of convenience microtransactions such as selling storage space.&lt;/p&gt;

&lt;p&gt;Convenience microtransactions are often a safe option. Players feel much better about microtransactions if they know that anything they can buy can also be earned by just playing for a while longer. However, it’s important to strike a balance. If convenience items are too cheap, players won’t want to spend time playing your game because you’ve shown that their time isn’t valuable. If convenience items are too expensive, you’re losing out on players who just want a good time within their budget. In Beginnings we plan to sell convenience items such as starterpacks that let you start a server with a few items. Like other kinds of convenience microtransactions, starterpacks are ultimately about saving time because they mean you don’t have to go around and gather basic tools every time you join.&lt;/p&gt;

&lt;h3 id=&quot;cosmetic&quot;&gt;Cosmetic&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Example: Buy this and make your shield look cool&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cosmetic microtransactions are the safest of all. Since they generally cannot be abused, nobody feels cheated. Games like &lt;a href=&quot;https://na.leagueoflegends.com/en/&quot;&gt;League of Legends&lt;/a&gt; sell skins that change the way your champion looks. These are perfect for highly competitive games (whereas power and mechanic microtransactions are not) because the balance of power is so delicate. If a player feels even slightly cheated in a MOBA, they’re going to find another MOBA.&lt;/p&gt;

&lt;p&gt;In Beginnings we are definitely going to take sell cosmetic items. One of the first will be shield variations; your shield can look Nordic, Roman, or Elven if you pay the price. We also plan on selling recipe variations that let you craft normal objects such as furniture out of unique materials.&lt;/p&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Power microtransactions&lt;/strong&gt; are rarely a good idea. Try to avoid them.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mechanic microtransactions&lt;/strong&gt; work well for some games but not others. Avoid disguising a power upgrade as a mechanic.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Convenience microtransactions&lt;/strong&gt; are fairly safe to sell, but you need to be careful with pricing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cosmetic microtransactions&lt;/strong&gt; are the safest of all. There’s no reason not to sell them.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">Monetization is one of the most controversial topics in gaming today. Should a game have a single upfront cost? Should it be free-to-play? What about freemium? Are loot boxes ethical? What should we sell, and what should be off limits? Should a game’s monetization scheme depend on its genre? These questions are particularly relevant for competitive online games with plenty of interaction between players. Since Beginnings falls under that description this is a topic I’ve put a lot of thought into. In our case we originally had no intentions of selling anything because we had no idea the game would become popular. Since then we’ve adopted a freemium model. We offer the vast majority of the game for free, but certain additional features or customizations are for sale. It seems to me that there are 4 basic categories that these kinds of microtransactions can be split into: power, mechanic, convenience, and cosmetic.</summary></entry><entry><title type="html">You Copied Minecraft!</title><link href="http://localhost:4000/2019/02/12/copied-minecraft/" rel="alternate" type="text/html" title="You Copied Minecraft!" /><published>2019-02-12T00:00:00-06:00</published><updated>2019-02-12T00:00:00-06:00</updated><id>http://localhost:4000/2019/02/12/copied-minecraft</id><content type="html" xml:base="http://localhost:4000/2019/02/12/copied-minecraft/">&lt;p&gt;A common remark I hear when someone first plays Beginnings is that we copied Minecraft. It’s true there are similarities; I even describe our game as being similar to Minecraft. Despite this, similarity does not imply copying.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;we-had-survival-gameplay-first&quot;&gt;We had survival gameplay first.&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/2019/01/22/history-beginnings/&quot;&gt;As discussed previously&lt;/a&gt;, Beginnings is just one part of a family of games I call The Survival Series. The first of these, Survival 101, was released in June 2009. Minecraft didn’t release its &lt;a href=&quot;https://minecraft.gamepedia.com/Survival_Test&quot;&gt;first survival version&lt;/a&gt; until September 2009.&lt;/p&gt;

&lt;p&gt;Thus, Survival 101 included many features that are today associated with Minecraft before Minecraft itself did. For everything we’ve kept the same since 101, we clearly didn’t copy Minecraft.&lt;/p&gt;

&lt;h3 id=&quot;there-are-core-gameplay-differences&quot;&gt;There are core gameplay differences.&lt;/h3&gt;

&lt;p&gt;Even if The Survival Series had been created after Minecraft added a survival mode, it would still not be fair to claim that Beginnings is a Minecraft clone. The most important reason for this is that playing the two games feels fundamentally different.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://minecraft.gamepedia.com/Minecraft_Wiki&quot;&gt;According to the Minecraft Wiki&lt;/a&gt;, Minecraft is a “sandbox construction game.” It’s about being able to gather resources (“mine”) and create anything from those resources (“craft”). It is not originally a survival game. Stripped to its core, it’s about shaping the world around you, not about surviving. Most of the survival in Minecraft becomes trivial anyway once you acquire sufficient resources.&lt;/p&gt;

&lt;p&gt;In contrast, there are no game modes in Beginnings. There is only survival. Surviving never becomes trivial because there will always be the threat of other players. There are also many permanent structures in Beginnings such as mountains and oceans. Compared to Minecraft, Beginnings has less emphasis on sandbox gameplay and more emphasis on survival gameplay.&lt;/p&gt;

&lt;p&gt;So no, we didn’t copy Minecraft.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">A common remark I hear when someone first plays Beginnings is that we copied Minecraft. It’s true there are similarities; I even describe our game as being similar to Minecraft. Despite this, similarity does not imply copying.</summary></entry><entry><title type="html">Senior Project Ideas</title><link href="http://localhost:4000/2019/02/05/senior-project-ideas/" rel="alternate" type="text/html" title="Senior Project Ideas" /><published>2019-02-05T00:00:00-06:00</published><updated>2019-02-05T00:00:00-06:00</updated><id>http://localhost:4000/2019/02/05/senior-project-ideas</id><content type="html" xml:base="http://localhost:4000/2019/02/05/senior-project-ideas/">&lt;p&gt;This semester I have two main focuses: my internship and my senior project. Last month I started an internship at &lt;a href=&quot;https://invenshure.com/&quot;&gt;Invenshure&lt;/a&gt; — more on that in a future post. This month I’m starting on my senior project. Although my advisor Dr. Zderad allows great flexibility in choosing a topic, the focus should be on actually creating something. Research is secondary for this particular project.&lt;/p&gt;

&lt;p&gt;Naturally the first step is choosing a topic, and over the past couple months I’ve thought through a few ideas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;3D Object Fitting Algorithm (C++)&lt;/li&gt;
  &lt;li&gt;Bible Memory Mobile App (Java)&lt;/li&gt;
  &lt;li&gt;Stock Market Prediction (Python)&lt;/li&gt;
  &lt;li&gt;Beginnings 2 (Lua)&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;3d-object-fitting-algorithm-c&quot;&gt;3D Object Fitting Algorithm (C++)&lt;/h3&gt;

&lt;p&gt;When interviewing at &lt;a href=&quot;https://www.protolabs.com/&quot;&gt;Protolabs&lt;/a&gt; I asked: “Do you have an idea of something I could work on in preparation for the internship?”&lt;/p&gt;

&lt;p&gt;My interviewers gave several topics I could learn about: version control, Visual Studio, large codebases, geometry and linear algebra, and file I/O in C++. One that stuck out was the simple task of fitting a box around a 3D object at a low level. I decided this would work well as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Minimum_viable_product&quot;&gt;minimum viable product&lt;/a&gt;, and more features could be added over time: shapes more complex than a box, changes in orientation to allow for better fitting, and perhaps ultimately an algorithm that assigns a value to how well a given object fits into a given shape.&lt;/p&gt;

&lt;h3 id=&quot;bible-memory-mobile-app-java&quot;&gt;Bible Memory Mobile App (Java)&lt;/h3&gt;

&lt;p&gt;Recently I’ve been using &lt;a href=&quot;https://biblememory.com/&quot;&gt;The Bible Memory App&lt;/a&gt; to learn scripture. There’s a lot to like, but I can’t help but think I could do a better job. It lacks several features I consider crucial as well as some that would just be handy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Option to learn verse numbers&lt;/li&gt;
  &lt;li&gt;Option to memorize from the original Greek and Hebrew&lt;/li&gt;
  &lt;li&gt;Accurate progression: the app says a verse is “memorized” the first time you work on it&lt;/li&gt;
  &lt;li&gt;More than one way to memorize a verse&lt;/li&gt;
  &lt;li&gt;Dark mode&lt;/li&gt;
  &lt;li&gt;Stricter requirements: type first 2 letters, require the grammar, etc.&lt;/li&gt;
  &lt;li&gt;In-app resources about scripture memory (articles, quotes, etc.)&lt;/li&gt;
  &lt;li&gt;Better monetization (charging for versions of the Bible? &lt;em&gt;Really?&lt;/em&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sansforgetica.rmit/&quot;&gt;Sans Forgetica&lt;/a&gt; (because why not)&lt;/li&gt;
  &lt;li&gt;Android notifications that &lt;em&gt;actually work&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Who knows, maybe there’s already an app out there that has these features. But the fact that one of the most popular options falls short of the mark tells me there’s an opportunity here.&lt;/p&gt;

&lt;h3 id=&quot;stock-market-prediction-python&quot;&gt;Stock Market Prediction (Python)&lt;/h3&gt;

&lt;p&gt;Perhaps the craziest idea I’ve been considering is stock market prediction. Certainly many have tried, and I too would likely fail, but failure can be glorious if you learn something in the process. Data science is an area I’m interested in but haven’t yet dived into. Even my initial research shows &lt;a href=&quot;https://hackernoon.com/i-spent-20-minutes-trying-to-predict-the-stock-market-with-ai-these-are-my-results-59d48c7a388a&quot;&gt;someone achieving 54% accuracy in 20 minutes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ve already written a &lt;a href=&quot;/projects/currency/&quot;&gt;profitable trading algorithm&lt;/a&gt;, but competition would be several orders of magnitude greater on the actual stock market. Of course I would start with a simulator to make trades if I ever got to that point.&lt;/p&gt;

&lt;p&gt;The stock market appeals to me because gathering data and judging success are both straight forward. This means I could focus on the algorithm itself.&lt;/p&gt;

&lt;h3 id=&quot;beginnings-2-lua&quot;&gt;Beginnings 2 (Lua)&lt;/h3&gt;

&lt;p&gt;While every idea here appeals to me, the one I am actually most excited about is finishing &lt;a href=&quot;/projects/beginnings/&quot;&gt;Beginnings 2&lt;/a&gt;. Although the game is nearly finished, even the remaining work is larger than a typical senior project. With that in mind, I asked my advisor whether this would be an option and he encouraged it. I’ve now decided that this will be my senior project, and I believe it’s the push I need to finally finish the game.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">This semester I have two main focuses: my internship and my senior project. Last month I started an internship at Invenshure — more on that in a future post. This month I’m starting on my senior project. Although my advisor Dr. Zderad allows great flexibility in choosing a topic, the focus should be on actually creating something. Research is secondary for this particular project. Naturally the first step is choosing a topic, and over the past couple months I’ve thought through a few ideas: 3D Object Fitting Algorithm (C++) Bible Memory Mobile App (Java) Stock Market Prediction (Python) Beginnings 2 (Lua)</summary></entry><entry><title type="html">Random Maps</title><link href="http://localhost:4000/2019/01/29/random-maps/" rel="alternate" type="text/html" title="Random Maps" /><published>2019-01-29T00:00:00-06:00</published><updated>2019-01-29T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/29/random-maps</id><content type="html" xml:base="http://localhost:4000/2019/01/29/random-maps/">&lt;p&gt;Today we’ll be looking at random map generation in Beginnings 2. Every server will be unique. The generation algorithm consists of two parts: island selection and island placement. We also have a GUI minimap.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;island-selection&quot;&gt;Island Selection&lt;/h3&gt;

&lt;p&gt;First, a number of islands are selected from a pool. While Beginnings currently has 14 islands, Beginnings 2 will have an island pool around 3 times that size. From this pool the algorithm randomly selects islands to place in a server. The algorithm makes sure all resource types are included in at least one spot on the map.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/random-maps-generations.png&quot; /&gt;&lt;figcaption&gt;Some random maps&lt;/figcaption&gt;&lt;/figure&gt;

&lt;h3 id=&quot;island-placement&quot;&gt;Island Placement&lt;/h3&gt;

&lt;p&gt;Second, the chosen islands are scattered across the map. In general colder islands are placed in the north, and warmer islands are placed in the south. Some islands can be placed anywhere.&lt;/p&gt;

&lt;p&gt;You may have noticed that the continent and the volcano are always present. It’s true that a single continent will appear on every server, but other continents are in development (think snow, desert, and so on). As for the volcano, no server will escape its looming presence.&lt;/p&gt;

&lt;h3 id=&quot;minimap&quot;&gt;Minimap&lt;/h3&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/random-maps-minimap.jpg&quot; /&gt;&lt;figcaption&gt;A GUI showing the original map&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;This GUI minimap was developed by our faithful admin who goes by the username CounterCrysis. At the moment it takes a “screenshot” of the map when a server launches, though it would be interesting to pursue a minimap that updates in real time.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">Today we’ll be looking at random map generation in Beginnings 2. Every server will be unique. The generation algorithm consists of two parts: island selection and island placement. We also have a GUI minimap.</summary></entry><entry><title type="html">The History of Beginnings</title><link href="http://localhost:4000/2019/01/22/history-beginnings/" rel="alternate" type="text/html" title="The History of Beginnings" /><published>2019-01-22T00:00:00-06:00</published><updated>2019-01-22T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/22/history-beginnings</id><content type="html" xml:base="http://localhost:4000/2019/01/22/history-beginnings/">&lt;p&gt;This blog seems a natural place to write about my projects. The largest of these is Beginnings, a game published on &lt;a href=&quot;https://www.roblox.com/&quot;&gt;Roblox&lt;/a&gt;. In this post I’d like to go over the game’s history. If you’re more interested in the game’s current state, take a look at its &lt;a href=&quot;/projects/beginnings/&quot;&gt;project page&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;In June 2009, David “Davidii” Nurkkala—an old friend of mine—created a game called Survival 101. I distinctly remember playing one of the earliest versions. There was a single island, and the only resources were trees and berry bushes. One day the player count spiked to over 600, securing the #1 spot on the Roblox games page. The Survival Series and its loyal community were born.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/history-beginnings-101.jpg&quot; /&gt;&lt;figcaption&gt;Survival 101&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;David went on to create Survival 202 and Survival 303 that same year. 303 became the fan favorite with plays surpassing even David’s sequels: 404 in 2010, Finale in 2011, Into the Frost in 2012, and Dominion in 2013.&lt;/p&gt;

&lt;p&gt;Meanwhile many of us continued to play 303. When David shifted his focus elsewhere, he gave me permission to update the game in his stead. Several others joined the 303 development team later, and &lt;a href=&quot;https://www.roblox.com/games/480485987/Survival-303&quot;&gt;the game receives updates to this day&lt;/a&gt;.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/history-beginnings-303.png&quot; /&gt;&lt;figcaption&gt;Survival 303&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;In November 2013 I decided to make a sequel to 303. I had experience with the genre and a desire to grow the Survival Series. Thus I began work on Survival: Beginnings. My brother Nathan joined not long after. By chance David also decided to make a sequel to 303 around the same time, Survival 323.&lt;/p&gt;

&lt;p&gt;Beginnings was made from the ground up in about 40 days. The day after its release it hit the #1 spot on the games page at around 3,700 players. Since its release it has been played over 2 million times. Unfortunately, because the code was written shortly before &lt;a href=&quot;https://blog.roblox.com/2014/05/game-creation-gets-bigger-faster-and-more-lucrative-in-2014/&quot;&gt;FilteringEnabled became an option&lt;/a&gt;, rampant exploiters ruined hundreds of servers. This made updates feel pointless. Why make updates if they would be nullified by hordes of &lt;a href=&quot;https://en.wikipedia.org/wiki/Script_kiddie&quot;&gt;script kiddies&lt;/a&gt;? This led us to start work on Beginnings 2.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;/public/images/history-beginnings-series.png&quot; /&gt;&lt;figcaption&gt;The Survival Series&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;Over the past few years we’ve been working on Beginnings 2 here and there. Of course we would have liked to release the game long ago, but several factors have caused delays. We have tremendous aspirations for the game, and we don’t want to release something half baked. It’s currently in Beta and benefits from testers in our community of fans. We will release the public version when we believe it’s ready.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">This blog seems a natural place to write about my projects. The largest of these is Beginnings, a game published on Roblox. In this post I’d like to go over the game’s history. If you’re more interested in the game’s current state, take a look at its project page.</summary></entry><entry><title type="html">My Undergraduate Courses</title><link href="http://localhost:4000/2019/01/15/unw-courses/" rel="alternate" type="text/html" title="My Undergraduate Courses" /><published>2019-01-15T00:00:00-06:00</published><updated>2019-01-15T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/15/unw-courses</id><content type="html" xml:base="http://localhost:4000/2019/01/15/unw-courses/">&lt;p&gt;Below I’ve listed all the courses within my computer science major that I’ve taken at the &lt;a href=&quot;https://unwsp.edu/&quot;&gt;University of Northwestern – St. Paul&lt;/a&gt;. Only the courses that are strictly within my major are shown; I’ve also taken a number of general courses such as Physics and Economics. This post will serve as a reference for myself and for anyone interested in my coursework. Nearly everything below is taken straight from the syllabi.&lt;/p&gt;

&lt;!--more--&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Number&lt;/th&gt;
      &lt;th&gt;Title&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;COS1075&lt;/td&gt;
      &lt;td&gt;Principles of Computer Science&lt;/td&gt;
      &lt;td&gt;An introduction to computer hardware, development of computer programs for problem solving, basics of programming, fundamentals of computer security, and the use of computer networks.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS2115&lt;/td&gt;
      &lt;td&gt;Computer Software Development&lt;/td&gt;
      &lt;td&gt;An introduction to developing front-end applications for databases and developing applications in a business environment. See: &lt;a href=&quot;/projects/freegan/&quot;&gt;Games Database App&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS2201&lt;/td&gt;
      &lt;td&gt;C Programming Language&lt;/td&gt;
      &lt;td&gt;Fundamental principles of programming in the “C” programming language: programming techniques, language, and vocabulary.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS2202&lt;/td&gt;
      &lt;td&gt;C++ Programming Language&lt;/td&gt;
      &lt;td&gt;Fundamental principles of programming in the C++ programming language: object-oriented programming, variables, data types, arrays, pointers, functions, and classes.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS3267&lt;/td&gt;
      &lt;td&gt;Operating Systems Concepts&lt;/td&gt;
      &lt;td&gt;An overview of the principles upon which all operating systems are built. The concepts of file, processor, input/output, and memory management are explored. In addition, higher-level concepts such as security, multiple processors, multitasking, concurrency, and transaction processing are covered. See: &lt;a href=&quot;/projects/hadoop/&quot;&gt;Hadoop Clusters&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS3369&lt;/td&gt;
      &lt;td&gt;Computer Security Fundamentals&lt;/td&gt;
      &lt;td&gt;An introduction to the concepts of security. These concepts are applied to areas such as programming, databases, networks, systems, and applications. The course covers general concepts and specific instances of security related threats. See: &lt;a href=&quot;/projects/quantum/&quot;&gt;Quantum Cryptography Presentation&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS3381&lt;/td&gt;
      &lt;td&gt;Data Communications&lt;/td&gt;
      &lt;td&gt;A comprehensive overview of the broad topic of data communications including IPv4 and IPv6. The ISO OSI model of data communications is used as a framework.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS3835&lt;/td&gt;
      &lt;td&gt;Career Competencies Seminar&lt;/td&gt;
      &lt;td&gt;Orientation and preparation for an academic internship. To be completed the semester immediately prior to enrolling in the internship course offered by the academic department.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COS4845&lt;/td&gt;
      &lt;td&gt;Senior Project&lt;/td&gt;
      &lt;td&gt;A capstone experience for computer science majors in their senior year. Each student works on an in-depth, guided project, culminating in both a written report and an oral presentation.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIS3265&lt;/td&gt;
      &lt;td&gt;Systems Analysis and Design&lt;/td&gt;
      &lt;td&gt;A course that covers the topic of Systems Analysis and Design within the context of the System Development Life Cycle (SDLC). The Unified Modeling Language (UML) is introduced and used to generate artifacts of the life cycle. The requirements, analysis, and design phases of the life cycle are explored in detail. See: &lt;a href=&quot;/projects/wsi/&quot;&gt;WSI Sports Production Flow&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIS3361&lt;/td&gt;
      &lt;td&gt;Database Management&lt;/td&gt;
      &lt;td&gt;A course that presents the fundamental concepts of databases and the general architectures used in modern databases. The ideas of database design are presented along with topics such as database access, indexing, reports, and queries. The student is exposed to one a current database management systems. An actual database application using the programmability of the DBMS is created as part of this course.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIS4465&lt;/td&gt;
      &lt;td&gt;Computer Firewalls&lt;/td&gt;
      &lt;td&gt;A course that presents the basics of VPN security and network firewalls. Basic installation techniques are covered along with how to make an intelligent choice of firewall technology. Basic firewall troubleshooting is also presented. This course aligns with the CheckPoint CCSA Certification outline.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIS4466&lt;/td&gt;
      &lt;td&gt;Computer Forensics&lt;/td&gt;
      &lt;td&gt;An introductory course that provides the student with methods for conducting a computer forensics investigation including procedures, tools, ethics, and analysis. This course maps to the objectives of the International Association of Computer Investigative Specialists (IACIS) certification.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2005&lt;/td&gt;
      &lt;td&gt;Problem Solving&lt;/td&gt;
      &lt;td&gt;An introduction to mathematics and mathematics problem solving, including problem selection, problem solving strategies, the problem solving process, and contemporary applications of mathematics.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2055&lt;/td&gt;
      &lt;td&gt;Statistics&lt;/td&gt;
      &lt;td&gt;An introductory statistics course consisting of two major areas: descriptive and inferential statistics. Topics covered include methods for describing data, binomial and normal probability distributions, tests of hypothesis, analysis of variance, and linear regression.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2121&lt;/td&gt;
      &lt;td&gt;Calculus and Analytic Geometry I&lt;/td&gt;
      &lt;td&gt;The study of functions, limits, derivatives, and applications of derivatives such as maxima/minima and related rates.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2122&lt;/td&gt;
      &lt;td&gt;Calculus and Analytic Geometry II&lt;/td&gt;
      &lt;td&gt;The continued study of calculus to include antiderivatives, integration techniques, applications of definite integrals such as volumes of revolution, polar coordinates, series, sequences, and power series.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2215&lt;/td&gt;
      &lt;td&gt;Linear Algebra&lt;/td&gt;
      &lt;td&gt;A course that provides an understanding of the concepts of linear system, linear transformation, linear independence, basis, vector space, row/column space, determinant, dimension, rank, eigenvector, and inner product space. It also provides an ability to solve linear equations, perform matrix operations, calculate determinants, perform vector operations, determine eigenvectors/eigenvalues, and diagonalize a matrix.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2221&lt;/td&gt;
      &lt;td&gt;Universal Theories of Mathematics I&lt;/td&gt;
      &lt;td&gt;An introductory treatment on the development of the logical structure of mathematics including propositions, predicates, truth tables, and the rules of logic. A formal development of set theory including set operations, permutations, combinations, Pascal’s triangle, and partitions.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT2222&lt;/td&gt;
      &lt;td&gt;Universal Theories of Mathematics II&lt;/td&gt;
      &lt;td&gt;An in-depth analysis of axiomatic systems and proof techniques including: direct proof, proof by contradiction, existence proofs, and mathematical induction. A formal development of relations including equivalence classes, partial orders, and functions. A study of the concepts of infinity and countability.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT3225&lt;/td&gt;
      &lt;td&gt;Discrete Mathematics&lt;/td&gt;
      &lt;td&gt;An overview of the mathematics of discrete processes. Topics include graphs, trees, linear programming, recursion, and algorithm analysis.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT3226&lt;/td&gt;
      &lt;td&gt;Digital Mathematics&lt;/td&gt;
      &lt;td&gt;An overview of the mathematics of the discrete processes of computers. Topics include the fundamentals of logic, Boolean algebra, number systems, and logical circuits.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAT4337&lt;/td&gt;
      &lt;td&gt;Mathematical Models and Applications&lt;/td&gt;
      &lt;td&gt;A survey course in choosing mathematical models to help explain and predict real-world phenomena. Particular problems in the social, life, physical, and management sciences are investigated. See: &lt;a href=&quot;/projects/autumn/&quot;&gt;Autumn Simulation&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">Below I’ve listed all the courses within my computer science major that I’ve taken at the University of Northwestern – St. Paul. Only the courses that are strictly within my major are shown; I’ve also taken a number of general courses such as Physics and Economics. This post will serve as a reference for myself and for anyone interested in my coursework. Nearly everything below is taken straight from the syllabi.</summary></entry><entry><title type="html">5 Reasons to Choose Jekyll</title><link href="http://localhost:4000/2019/01/08/reasons-jekyll/" rel="alternate" type="text/html" title="5 Reasons to Choose Jekyll" /><published>2019-01-08T00:00:00-06:00</published><updated>2019-01-08T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/08/reasons-jekyll</id><content type="html" xml:base="http://localhost:4000/2019/01/08/reasons-jekyll/">&lt;p&gt;The web has no shortage of options when it comes to creating a website. I’m here to make the argument that you should host your site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; using &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. This choice especially makes sense for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Developers&lt;/strong&gt; – Jekyll lets you write your own code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Bloggers&lt;/strong&gt; – Jekyll offers excellent blog support.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that’s why I’m using Jekyll for this developer blog. But I also believe it’s a good option for many other types of websites, and here are 5 reasons why.&lt;!--more--&gt; A Jekyll site hosted on GitHub Pages is:&lt;/p&gt;

&lt;h3 id=&quot;1-free&quot;&gt;1. Free&lt;/h3&gt;

&lt;p&gt;GitHub Pages allows you to host an unlimited number of project sites at no cost. It works great with Jekyll, too. Although Jekyll can be hosted elsewhere and GitHub Pages supports all kinds of static site generators, I’ve found &lt;a href=&quot;https://jekyllrb.com/docs/github-pages/&quot;&gt;recommendations from Jekyll to use GitHub Pages&lt;/a&gt; and &lt;a href=&quot;https://help.github.com/articles/about-github-pages-and-jekyll/&quot;&gt;recommendations from GitHub Pages to use Jekyll&lt;/a&gt;. They belong together.&lt;/p&gt;

&lt;h3 id=&quot;2-static&quot;&gt;2. Static&lt;/h3&gt;

&lt;p&gt;Everything on your site is static. This means your site is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt; – You don’t have to wait for a database or anything else on the backend because there is no backend.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt; – There aren’t a lot of plugins or dependencies to worry about.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reliable&lt;/strong&gt; – Jekyll’s small scope means there’s no server-side software to maintain.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-flexible&quot;&gt;3. Flexible&lt;/h3&gt;

&lt;p&gt;Jekyll is great for software developers. It gives you total control and doesn’t force you to do anything you don’t want to do. However, even the less technically inclined are free to set up a website. There are all kinds of &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;free themes&lt;/a&gt; to choose from if you don’t want to design your own. Someone even made a &lt;a href=&quot;https://github.com/barryclark/jekyll-now&quot;&gt;guide&lt;/a&gt; to setting up your site without using the command line.&lt;/p&gt;

&lt;h3 id=&quot;4-open-source&quot;&gt;4. Open source&lt;/h3&gt;

&lt;p&gt;All the code can be &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;found on GitHub&lt;/a&gt;. This is also true of many themes, and, of course, the code for your own site if you so choose.&lt;/p&gt;

&lt;h3 id=&quot;5-owned-by-you&quot;&gt;5. Owned by you&lt;/h3&gt;

&lt;p&gt;You own your content. The devs behind Jekyll could give up on the project and you’d still have online and local copies of your entire site. This isn’t true of many other platforms. They could go out of business or shut down the part of the business you rely on. You’d always be at risk of losing your content. Not so of Jekyll!&lt;/p&gt;

&lt;p&gt;Free, static, flexible, open source, and owned by you. That’s what you get when you choose Jekyll on GitHub Pages. There are no doubt many other worthy options to consider, and you should look into these, but for me personally I found exactly what I wanted right here.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">The web has no shortage of options when it comes to creating a website. I’m here to make the argument that you should host your site on GitHub Pages using Jekyll. This choice especially makes sense for: Developers – Jekyll lets you write your own code. Bloggers – Jekyll offers excellent blog support. And that’s why I’m using Jekyll for this developer blog. But I also believe it’s a good option for many other types of websites, and here are 5 reasons why.</summary></entry><entry><title type="html">Hello World</title><link href="http://localhost:4000/2019/01/01/hello-world/" rel="alternate" type="text/html" title="Hello World" /><published>2019-01-01T00:00:00-06:00</published><updated>2019-01-01T00:00:00-06:00</updated><id>http://localhost:4000/2019/01/01/hello-world</id><content type="html" xml:base="http://localhost:4000/2019/01/01/hello-world/">&lt;p&gt;Hi there! I’m Peter.&lt;/p&gt;

&lt;p&gt;I wrote my first line of code when I was eight, and I’ve loved it ever since. Since then I’ve created games, desktop apps, databases, macros, websites, web crawlers, trading algorithms–whatever piques my curiosity, really. I’m fascinated by interesting problems, and I enjoy writing code to solve them. I’m currently majoring in computer science at the &lt;a href=&quot;https://unwsp.edu/&quot;&gt;University of Northwestern – St. Paul&lt;/a&gt;, and I’ll graduate later this year.&lt;/p&gt;

&lt;p&gt;In this first post I’d like to get a few things out of the way.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;this-is-a-developer-blog&quot;&gt;This is a developer blog.&lt;/h3&gt;

&lt;p&gt;The focus is on technology, not on me. This is meant as a space for me to share my thoughts about relevant topics in computer science that interest me and that I believe may interest others. I will also write about projects I’m working on. This is intentionally broad because I don’t want to restrict myself to specific topics so early on.&lt;/p&gt;

&lt;h3 id=&quot;i-have-several-reasons-for-writing-here&quot;&gt;I have several reasons for writing here.&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;To learn new things constantly.&lt;/li&gt;
  &lt;li&gt;To master what I’m learning by teaching it to others.&lt;/li&gt;
  &lt;li&gt;To keep a historical record of my thoughts and work.&lt;/li&gt;
  &lt;li&gt;To benefit readers by adding something unique to the conversation.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I have no intention of reaching a wide audience. Even if nobody reads what I write, my first three goals will be fulfilled. That is enough for me.&lt;/p&gt;

&lt;h3 id=&quot;posts-will-be-published-every-tuesday-at-minimum&quot;&gt;Posts will be published every Tuesday at minimum.&lt;/h3&gt;

&lt;p&gt;This schedule will help to keep myself accountable. It may change to become more or less frequent as time goes on.&lt;/p&gt;

&lt;p&gt;Next week I’ll move beyond introduction and start discussing topics in the industry.&lt;/p&gt;</content><author><name>Peter Gee</name></author><category term="News" /><summary type="html">Hi there! I’m Peter. I wrote my first line of code when I was eight, and I’ve loved it ever since. Since then I’ve created games, desktop apps, databases, macros, websites, web crawlers, trading algorithms–whatever piques my curiosity, really. I’m fascinated by interesting problems, and I enjoy writing code to solve them. I’m currently majoring in computer science at the University of Northwestern – St. Paul, and I’ll graduate later this year. In this first post I’d like to get a few things out of the way.</summary></entry></feed>